@startuml
    
    Package "Controllers"{
        class ExpenseController{
            + registerFixedExpense(JsonData)
            + getFixedExpense(id)
            + getAllFixedExpenses()
            + registerExpenseCategory(JsonData)
            + setExpenseCategoryBudget(JsonData)
            + getExpenseCategory(id)
            + getComparativeHistoryExpenseCategory(id)
            + getComparativeHistoryExpenseCategories()
            + getComparativeCurrentAmountExpenseCategory(id)
            + getTotalAmountComparativeHistoryExpenses()
            + getCurrentTotalAmountExpense()
        }

        class TransactionController{
            + registerTransaction(imgFile)
            + registerTransaction(pdfFile)
            + registerTransaction(JsonData)
            + getTransaction(id)
            + getTransactionHistory(number)
            
        }

        class RevenueController{
            + registerFixedRevenue(JsonData)
            + getFixedRevenue(id)
            + getAllFixedRevenues()
            + registerVariedRevenue(JsonData)
            + getVariedRevenue(id)
            + getVariedRevenues(number)
        }

        class BankAccountController{
            + registerBankAccount(JsonData)
            + getBankAccount(id)
            + getMostUsedBankAccounts()
            + getAllBankAccounts()
        }

        class FinancePlanningController{
            + registerEconomicGoal(JsonData)
            + differenceBetweenCurrentExpenseAndGoalAmount()
        }

        class AuthController{
            + register(JsonData)
            + login(JsonData)
        }
    }

    Package "Services"{
        class ExpenseService{
            + registerFixedExpense(obj)
            + getFixedExpense(id)
            + updateFixedExpense(id,obj)
            + deleteFixedExpense(id)
            + getAllFixedExpenses()

            + registerExpenseCategory(obj)
            + getExpenseCategory(id)
            + updateExpenseCategory(id,obj)
            + deleteExpenseCategory(id)
            + getAllExpenseCategories()

            + getComparativeHistoryExpenseCategory(id)
            + getComparativeHistoryExpenseCategories()
            + getComparativeCurrentAmountExpenseCategory(id)
            + getTotalAmountComparativeHistoryExpenses()
            + getCurrentTotalAmountExpense()

            + simulateFees(int months, fee, numberOfDelays, monthAmount)
            + calculateAmountWithFee(fee, numberOfDelays, monthAmount)
        }

        class TransactionService{
            - convertImgDataToTransaction(imgData)
            - convertPdfToTransaction(pdfData)
            
            + registerTransaction(obj)
            + registerTransaction(imgData)
            + registerTransaction(pdfData)
            + getTransaction(id)
            + updateTransaction(id)
            + getLatestTransaction(number)
            + deleteTransaction(id)
        }

        class RevenueService{
            + registerFixedRevenue(obj)
            + getFixedRevenue(id)
            + getAllFixedRevenues()
            + registerVariedRevenue(obj)
            + getVariedRevenue(id)
            + getVariedRevenues(int)
        }

        class BankAccountService{
            + registerBankAccount(obj)
            + getBankAccount(id)
            + getMostUsedBankAccounts()
            + getAllBankAccounts()
        }

        class FinancePlanningService{
            + registerEconomicGoal(obj)
            + differenceBetweenCurrentExpenseAndGoalAmount()
            + userDontReachGoalAmountInMonth()
            + checkDifficultyLevelOfEconomicGoal()
            + userExceedsMonthlyGoalAmount()
        }

        class AuthService{
            + register(obj)
            + login(obj)
        }
    }

    Package "Models"{
        class User {
            - Long id
            - String username
            - String password
        }

        class Revenue{
            -List<FixedRevenue> fixedRevenues
            -List<VariedRevenue> variedRevenues

            + getRevenue()
            + getFixedRevenues()
            + getVariedRevenues()
        }

        class FixedRevenue {
            - String name
            - String description
            - Double amount
            - Date receivedDate
            - Boolean isFixedAmount
            - Int paymentFrequencyInMonths
        }
        class VariedRevenue {
            - String name
            - String description
            - Double amount
            - Date receivedDate
            - Date deadLine
            - Boolean isSchedule
            - Boolean isReceived
            - Integer numberOfDelays
            - Fee fee

            + extendDeadLineWithFee()
        }
        class ExpenseCategory{
            - String name
            - Double amount
            - Double budget
            - List<Transaction> transactions
            - List<FixedExpense> fixedExpenses
        }
        class FixedExpense{
            - String description
            - String observations
            - String typeOfCurrency
            - Double monthAmount
            - Double totalAmount 
            - ExpenseCategory category
            - Int paymentFrequencyInMonths
            - Date billingDate
            - Boolean isRecurring
            - Fee fee
            - Integer numberOfDelays
            - List<Transaction> transactions

            + Boolean isPaidOut()
        }
        enum Fee{
            SIMPLE_FEE,
            COMPOUND_FEE,
            COSTUMIZED_FEE
        }
        class Transaction{
            - Double amount  
            - Date date
            - ExpenseCategory expenseCategory
            - BankAccount bankAccount
            - PaymentMethod paymentMethod
        }
        class BankAccount{
            - String name
            - String color
        }
        enum PaymentMethod{
            pix
            credit
            debit
            money
        }
    }

    ExpenseCategory "1" -- "0..n" FixedExpense
    FixedExpense "1" -- "0..n" Transaction
    ExpenseCategory "1" -- "0..n" Transaction
    Transaction "1" -- "1" BankAccount
    BankAccount "1" -- "1" PaymentMethod
    Revenue "1" -- "0..n" FixedRevenue
    Revenue "1" -- "0..n" VariedRevenue

@enduml
